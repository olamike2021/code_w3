Computer science is the study of problem solving.

Computer science uses abstraction as a tool for representing both processes and data.

Abstract data types allow programmers to manage the complexity of a problem domain by hiding the details of the data.

Python is a powerful, yet easy-to-use, object-oriented language.

Lists, tuples, and strings are built in Python sequential collections.

Dictionaries and sets are nonsequential collections of data.

Classes allow programmers to implement abstract data types.

Programmers can override standard methods as well as create new methods.

Classes can be organized into hierarchies.

A class constructor should always invoke the constructor of its parent before continuing on with its own data and behavior.

abstract data type

abstraction

algorithm

class

computable

data abstraction

data structure

data type

deep equality

dictionary

encapsulation

exception

format operator

formatted strings

HAS-A relationship

implementation-independent

information hiding

inheritance

inheritance hierarchy

interface

IS-A relationship

list

list comprehension

method

mutability

object

procedural abstraction

programming

prompt

self

shallow equality

simulation

string

subclass

superclass

truth table